{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","React","Component","profile","className","s","descriptionBlock","src","photos","large","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobImg","lookingForAJobDescription","fullName","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","MyPosts","memo","postsElements","posts","reverse","map","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b0408f61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__SLpwR\",\"lookingForAJobImg\":\"ProfileInfo_lookingForAJobImg__18XSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__z9xri\",\"posts\":\"MyPosts_posts__3oW41\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1FbXi\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false); // здесь сидит массив, из которого мы достаем первый элемент и присваем editMode, достаем второй элементи присваем setEditMode\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div>Обо мне\r\n                    <div>{profile.aboutMe}</div>\r\n                </div>\r\n                <div>Контакты\r\n                    <div>{profile.contacts.facebook}</div>\r\n                    <div>{profile.contacts.website}</div>\r\n                    <div>{profile.contacts.vk}</div>\r\n                    <div>{profile.contacts.twitter}</div>\r\n                    <div>{profile.contacts.instagram}</div>\r\n                    <div>{profile.contacts.youtube}</div>\r\n                    <div>{profile.contacts.github}</div>\r\n                    <div>{profile.contacts.mainLink}</div>\r\n                </div>\r\n                <div> Ищу работу\r\n                    <div>{profile.lookingForAJob ?\r\n                        <img className={s.lookingForAJobImg} src='https://www.photo-yes.ru/favicon.ico'/> :\r\n                        <img className={s.lookingForAJobImg}\r\n                             src='https://lh3.googleusercontent.com/proxy/xp7Cl4GW86z4Y0Kje7zRg55qUw8_8p7YVo16IQmUh-oR6cF7TPELi4lH9KdLZaGCjTaqJGfcXumtaC20Mkuf'/>}</div>\r\n                </div>\r\n                <div> Описание работы\r\n                    <div>{profile.lookingForAJobDescription}</div>\r\n                </div>\r\n                <div> Полное имя\r\n                    <div> {profile.fullName}</div>\r\n                </div>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '-----'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src='https://streamdps.ru/upload/iblock/ba4/ba43a8bf5b491168b4f74e9922c88c25.jpg' />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like</span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Post message' component={Textarea} name='newPostText' validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {getProfile, getStatus, updateStatus}), withRouter)(ProfileContainer)"],"sourceRoot":""}