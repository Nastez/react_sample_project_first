{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","dialogItem","src","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,2B,sGCmBjQC,EAhBI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SAEI,cAAC,IAAD,CAASC,GAAIN,EAAb,SACI,sBAAKE,UAAWC,IAAEI,WAAlB,UACI,qBAAKC,IAAI,6CACRT,EAAMU,aCHZC,EANC,SAACX,GACb,OACI,qBAAKG,UAAWC,IAAEQ,QAAlB,SAA4BZ,EAAMY,W,kCC0BpCC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAChB,GACpB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,wBAErG,8BACI,yDAQDC,EAxCC,SAAC1B,GAEb,IAAI2B,EAAkB3B,EAAM4B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY7B,GAAI6B,EAAE7B,GAAeQ,KAAMqB,EAAErB,MAAdqB,EAAE7B,OAClF8B,EAAmBhC,EAAM4B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEhC,OAO/F,OACI,sBAAKC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE+B,aAAlB,SACKR,IAEL,qBAAKxB,UAAWC,IAAE6B,SAAlB,SACKD,IAEL,cAACjB,EAAD,CAAqBG,SAbT,SAACkB,GACjBpC,EAAMqC,YAAYD,EAAOE,uB,uDCV7BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCcRE,sBAAQC,aAZD,SAACJ,GACnB,MAAO,CACHZ,YAAaY,EAAMZ,gBAIF,SAACiB,GACtB,MAAO,CACHR,YAAa,SAACC,GAAoBO,EAASC,YAAwBR,UDP3C,SAACS,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKjD,MAAMyC,OAET,cAACM,EAAD,eAAeE,KAAKjD,QAFI,cAAC,IAAD,CAAUO,GAAG,eAHT,GACX2C,IAAMH,WAUtC,OAFqCH,YAAQL,EAARK,CAAoCI,KCE9DL,CAAwEjB","file":"static/js/4.b1fdbbb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonAddMessage\":\"Dialogs_buttonAddMessage__wGFw-\",\"dialogs\":\"Dialogs_dialogs__Zs4V2\",\"dialog\":\"Dialogs_dialog__2cBFJ\",\"dialogItem\":\"Dialogs_dialogItem__CXg5g\",\"dialogsItems\":\"Dialogs_dialogsItems__1Z2DW\",\"messages\":\"Dialogs_messages__20Epz\",\"message\":\"Dialogs_message__2m2Fv\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n\r\n            <NavLink to={path}>\r\n                <div className={s.dialogItem}>\r\n                    <img src='https://archilab.online/images/1/123.jpg'/>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.scss';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.scss';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody' placeholder='Enter new message'/>\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectContainer = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectContainer;\r\n}","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(addMessageActionCreator(newMessageBody));}\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}